cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
  paths:
    - .composer/
    - .php_cs.cache

variables:
  COMPOSER_CACHE_DIR: ".composer"
  TYPO3_PATH_WEB: "$CI_PROJECT_DIR/.Build/Web"
  MYSQL_DATABASE: "typo3"
  MYSQL_ROOT_PASSWORD: "joh316"
  typo3DatabaseName: "typo3"
  typo3DatabaseHost: "mysql"
  typo3DatabaseUsername: "root"
  typo3DatabasePassword: "joh316"

before_script:
  - apk add git --update
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - 'which ssh-agent || ( apk add openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

stages:
  - cgl
  - test
  - analysis
  - upload

test:cgl:
  image: composer:1.6
  stage: cgl
  before_script:
  - composer remove typo3/cms-core --no-update
  - composer install
  script:
  - .Build/bin/php-cs-fixer fix --config=Build/.php_cs -v --dry-run --using-cache=no --path-mode=intersection ./

.test: &test_php
  stage: test
  services:
  - mysql:5
  image: php:$DOCKER_TAG
  only:
    - branches
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms-core="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit -c .Build/vendor/nimut/testing-framework/res/Configuration/UnitTests.xml Tests/Unit

# Build in PHP 7.0 and TYPO3 8.7
test:php70:typo3_8:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.0-alpine
    TYPO3_VERSION: ^8.7

# Build in PHP 7.0 and TYPO3 8.7
test:php71:typo3_8:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.1-alpine
    TYPO3_VERSION: ^8.7

# Build in PHP 7.2 and TYPO3 8.7
test:php70:typo3_8:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.2-alpine
    TYPO3_VERSION: ^8.7

# Build in PHP 7.2 and TYPO3 9.3
test:php72:typo3_9:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.2-alpine
    TYPO3_VERSION: ^9.3

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "issues"
    SONAR_SOURCES: "./Classes"
    SONAR_GITLAB_PROJECT_ID: "$CI_PROJECT_ID"
  script:
  - echo "sonar.projectKey=cart-events" > sonar-project.properties
  - gitlab-sonar-scanner
  allow_failure: true

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "publish"
    SONAR_SOURCES: "./Classes"
  script:
  - echo "sonar.projectKey=cart-events" > sonar-project.properties
  - gitlab-sonar-scanner

ter-upload:
  image: php:7.1-alpine
  stage: upload
  only:
    - tags
  before_script:
    - apk --no-cache add git zlib-dev libxml2-dev
    - docker-php-ext-install mbstring zip soap
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - export COMPOSER_CACHE_DIR=.composer
  script:
    - composer install
    - composer require namelesscoder/typo3-repository-client
    - export TYPO3_PATH_WEB="$PWD/.Build/Web"
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$T3O_USERNAME" ] && [ -n "$T3O_PASSWORD" ]; then
        echo -e "Preparing upload of release ${CI_COMMIT_TAG} to TER\n"
        # Cleanup before we upload
        git reset --hard HEAD && git clean -fx
        # Upload
        TAG_MESSAGE=`git tag -n10 -l $CI_COMMIT_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${CI_COMMIT_TAG} to TER"
        .Build/bin/upload . "$T3O_USERNAME" "$T3O_PASSWORD" "$TAG_MESSAGE"
      fi;
