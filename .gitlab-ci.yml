cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
  paths:
    - .composer/
    - .php_cs.cache

variables:
  COMPOSER_CACHE_DIR: ".composer"
  TYPO3_PATH_WEB: "$CI_PROJECT_DIR/.Build/Web"
  MYSQL_DATABASE: "typo3"
  MYSQL_ROOT_PASSWORD: "joh316"
  typo3DatabaseName: "typo3"
  typo3DatabaseHost: "mysql"
  typo3DatabaseUsername: "root"
  typo3DatabasePassword: "joh316"

before_script:
  - apk add git --update

stages:
  - lint
  - test
  - analysis
  - upload

lint:cgl:
  image: composer:1.6
  stage: lint
  before_script:
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
  script:
    - .Build/bin/php-cs-fixer fix --config=Build/.php_cs.dist -v --dry-run --using-cache=no --path-mode=intersection ./

lint:typoscriptcgl:
  stage: lint
  image: composer:1.6
  script:
    - composer remove typo3/cms-core --no-update
    - composer install --no-progress --no-ansi --no-interaction
    - .Build/bin/typoscript-lint -c tslint.yaml

lint:yaml:
  stage: lint
  image: python:alpine3.7
  before_script:
    - pip install yamllint==1.10.0
  script:
    - yamllint -c Build/yamllint.yaml Configuration/ Resources/ .travis.yml

lint:php72:
  stage: lint
  image: php:7.2-alpine
  script:
    - find . -name \*.php -exec php -l "{}" \;

.test: &test_php
  stage: test
  services:
  - mysql:5
  image: php:$DOCKER_TAG
  only:
    - branches
  before_script:
    - apk add --no-cache bash curl git mercurial openssh openssl parallel subversion tini
    - >
      if [[ "$COVERAGE" == "1" ]]; then
        apk add --no-cache $PHPIZE_DEPS
        pecl install xdebug && docker-php-ext-enable xdebug
      fi
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms-core="${TYPO3_VERSION}"
  script:
    - >
      if [[ "$COVERAGE" == "0" ]]; then
        .Build/bin/phpunit -c Build/UnitTests.xml Tests/Unit
      fi
    - >
      if [[ "$COVERAGE" == "1" ]]; then
        .Build/bin/phpunit --coverage-clover=phpunit.coverage.xml --log-junit=phpunit.report.xml -c Build/UnitTests.xml Tests/Unit
      fi
  artifacts:
    paths:
      - phpunit.coverage.xml
      - phpunit.report.xml
    expire_in: 1 day
    when: always

# Build in PHP 7.2 and TYPO3 9.5
test:php72:typo3_9:
  <<: *test_php
  variables:
    DOCKER_TAG: 7.2-alpine
    TYPO3_VERSION: ^9.5
    COVERAGE: 1

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "issues"
    SONAR_SOURCES: "./Classes"
    SONAR_GITLAB_PROJECT_ID: "$CI_PROJECT_ID"
  script:
  - echo "sonar.projectKey=cart-events-2.x" > sonar-project.properties
  - gitlab-sonar-scanner -Dsonar.php.coverage.reportPath=phpunit.coverage.xml -Dsonar.php.tests.reportPath=phpunit.report.xml
  allow_failure: true

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: "https://sonar.extco.de"
    SONAR_PROJECT_NAME: "$CI_PROJECT_NAME"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_PROJECT_VERSION: "$CI_JOB_ID"
    SONAR_ANALYSIS_MODE: "publish"
    SONAR_SOURCES: "./Classes"
  script:
  - echo "sonar.projectKey=cart-events-2.x" > sonar-project.properties
  - gitlab-sonar-scanner -Dsonar.php.coverage.reportPath=phpunit.coverage.xml -Dsonar.php.tests.reportPath=phpunit.report.xml

ter-upload:
  image: php:7.1-alpine
  stage: upload
  only:
    - tags
  when: manual
  before_script:
    - apk --no-cache add git zlib-dev libxml2-dev
    - docker-php-ext-install mbstring zip soap
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    - export COMPOSER_CACHE_DIR=.composer
  script:
    - composer install --no-progress --no-ansi --no-interaction
    - composer require namelesscoder/typo3-repository-client
    - export TYPO3_PATH_WEB="$PWD/.Build/Web"
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$T3O_USERNAME" ] && [ -n "$T3O_PASSWORD" ]; then
        echo -e "Preparing upload of release ${CI_COMMIT_TAG} to TER\n"
        # Cleanup before we upload
        git reset --hard HEAD && git clean -fx
        # Upload
        TAG_MESSAGE=`git tag -n10 -l $CI_COMMIT_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${CI_COMMIT_TAG} to TER"
        .Build/bin/upload . "$T3O_USERNAME" "$T3O_PASSWORD" "$TAG_MESSAGE"
      fi;
